{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Project/converter-website/src/components/Navbar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from 'react';\r\nimport { FileImage, FileText, Image, File, ChevronDown, Home, Info, HelpCircle } from 'lucide-react';\r\n\r\nexport default function ConverterNavbar() {\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n\r\n  const converterOptions = [\r\n    {\r\n      icon: <FileImage className=\"w-4 h-4 text-red-600\" />,\r\n      title: \"Image to PDF\",\r\n      href: \"image-to-pdf\"\r\n    },\r\n    {\r\n      icon: <FileText className=\"w-4 h-4 text-green-600\" />,\r\n      title: \"Word to PDF\",\r\n      href: \"word-to-pdf\"\r\n    },\r\n    {\r\n      icon: <File className=\"w-4 h-4 text-purple-600\" />,\r\n      title: \"PDF Tools\",\r\n      href: \"pdf-tools\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <nav className=\"bg-white border-b border-gray-200 sticky top-0 z-999\">\r\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex items-center justify-between h-16\">\r\n          \r\n          {/* Logo */}\r\n          <div className=\"flex items-center\">\r\n            <a href=\"/\" className=\"flex items-center space-x-3\">\r\n              <div className=\"bg-gray-900 p-2 rounded-lg\">\r\n                <File className=\"w-5 h-5 text-white\" />\r\n              </div>\r\n              <span className=\"text-xl font-medium text-gray-900\">FileConverter</span>\r\n            </a>\r\n          </div>\r\n\r\n          {/* Navigation Links */}\r\n          <div className=\"hidden md:flex items-center space-x-8\">\r\n            \r\n            {/* Home Link */}\r\n            <a \r\n              href=\"/\" \r\n              className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors\"\r\n            >\r\n              <Home className=\"w-4 h-4\" />\r\n              <span className=\"font-medium\">Home</span>\r\n            </a>\r\n\r\n            {/* Converters Dropdown */}\r\n            <div className=\"relative\">\r\n              <button\r\n                onClick={() => setIsDropdownOpen(!isDropdownOpen)}\r\n                className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors focus:outline-none\"\r\n              >\r\n                <span className=\"font-medium\">Converters</span>\r\n                <ChevronDown className={`w-4 h-4 transition-transform ${isDropdownOpen ? 'rotate-180' : ''}`} />\r\n              </button>\r\n\r\n              {/* Dropdown Menu */}\r\n              {isDropdownOpen && (\r\n                <div className=\"absolute top-full mt-2 w-56 bg-white border border-gray-200 rounded-lg shadow-lg py-2\">\r\n                  {converterOptions.map((option, index) => (\r\n                    <a\r\n                      key={index}\r\n                      href={option.href}\r\n                      className=\"flex items-center space-x-3 px-4 py-3 text-gray-700 hover:bg-gray-50 transition-colors\"\r\n                      onClick={() => setIsDropdownOpen(false)}\r\n                    >\r\n                      <div className=\"flex-shrink-0\">\r\n                        {option.icon}\r\n                      </div>\r\n                      <span className=\"font-medium\">{option.title}</span>\r\n                    </a>\r\n                  ))}\r\n                  \r\n                  {/* Divider */}\r\n                  <div className=\"border-t border-gray-200 my-2\"></div>\r\n                  \r\n                  {/* All Tools Link */}\r\n                  <a\r\n                    href=\"/tools\"\r\n                    className=\"flex items-center space-x-3 px-4 py-3 text-gray-700 hover:bg-gray-50 transition-colors\"\r\n                    onClick={() => setIsDropdownOpen(false)}\r\n                  >\r\n                    <div className=\"flex-shrink-0\">\r\n                      <File className=\"w-4 h-4 text-gray-600\" />\r\n                    </div>\r\n                    <span className=\"font-medium\">All Tools</span>\r\n                  </a>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* About Link */}\r\n            <a \r\n              href=\"/about\" \r\n              className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors\"\r\n            >\r\n              <Info className=\"w-4 h-4\" />\r\n              <span className=\"font-medium\">About</span>\r\n            </a>\r\n\r\n\r\n          </div>\r\n\r\n          {/* Mobile Menu Button */}\r\n          <div className=\"md:hidden\">\r\n            <button className=\"text-gray-600 hover:text-gray-900 focus:outline-none\">\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Click outside to close dropdown */}\r\n      {/* {isDropdownOpen && (\r\n        <div \r\n          className=\"fixed inset-0 z-99\" \r\n          onClick={() => setIsDropdownOpen(false)}\r\n        ></div>\r\n      )} */}\r\n    </nav>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,MAAM,mBAAmB;QACvB;YACE,oBAAM,6LAAC,mNAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;YAC3B,OAAO;YACP,MAAM;QACR;QACA;YACE,oBAAM,6LAAC,iNAAA,CAAA,WAAQ;gBAAC,WAAU;;;;;;YAC1B,OAAO;YACP,MAAM;QACR;QACA;YACE,oBAAM,6LAAC,qMAAA,CAAA,OAAI;gBAAC,WAAU;;;;;;YACtB,OAAO;YACP,MAAM;QACR;KACD;IAED,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCAGb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAE,MAAK;4BAAI,WAAU;;8CACpB,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,qMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;;;;;;8CAElB,6LAAC;oCAAK,WAAU;8CAAoC;;;;;;;;;;;;;;;;;kCAKxD,6LAAC;wBAAI,WAAU;;0CAGb,6LAAC;gCACC,MAAK;gCACL,WAAU;;kDAEV,6LAAC,sMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,6LAAC;wCAAK,WAAU;kDAAc;;;;;;;;;;;;0CAIhC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,SAAS,IAAM,kBAAkB,CAAC;wCAClC,WAAU;;0DAEV,6LAAC;gDAAK,WAAU;0DAAc;;;;;;0DAC9B,6LAAC,uNAAA,CAAA,cAAW;gDAAC,WAAW,AAAC,gCAAkE,OAAnC,iBAAiB,eAAe;;;;;;;;;;;;oCAIzF,gCACC,6LAAC;wCAAI,WAAU;;4CACZ,iBAAiB,GAAG,CAAC,CAAC,QAAQ,sBAC7B,6LAAC;oDAEC,MAAM,OAAO,IAAI;oDACjB,WAAU;oDACV,SAAS,IAAM,kBAAkB;;sEAEjC,6LAAC;4DAAI,WAAU;sEACZ,OAAO,IAAI;;;;;;sEAEd,6LAAC;4DAAK,WAAU;sEAAe,OAAO,KAAK;;;;;;;mDARtC;;;;;0DAaT,6LAAC;gDAAI,WAAU;;;;;;0DAGf,6LAAC;gDACC,MAAK;gDACL,WAAU;gDACV,SAAS,IAAM,kBAAkB;;kEAEjC,6LAAC;wDAAI,WAAU;kEACb,cAAA,6LAAC,qMAAA,CAAA,OAAI;4DAAC,WAAU;;;;;;;;;;;kEAElB,6LAAC;wDAAK,WAAU;kEAAc;;;;;;;;;;;;;;;;;;;;;;;;0CAOtC,6LAAC;gCACC,MAAK;gCACL,WAAU;;kDAEV,6LAAC,qMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,6LAAC;wCAAK,WAAU;kDAAc;;;;;;;;;;;;;;;;;;kCAOlC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAO,WAAU;sCAChB,cAAA,6LAAC;gCAAI,WAAU;gCAAU,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CACjE,cAAA,6LAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBrF;GA7HwB;KAAA","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///D:/Project/converter-website/src/components/image-to-pdf.ts"],"sourcesContent":["import { PDFDocument, PDFImage } from 'pdf-lib'\r\n\r\nexport async function convertToPdf(): Promise<void> {\r\n    const fileInput = document.getElementById(\"file_input\") as HTMLInputElement | null;\r\n    const nameInput = document.getElementById(\"file_name\") as HTMLInputElement | null;\r\n\r\n    if (!fileInput || !fileInput.files) {\r\n        alert(\"Select a PNG or JPG file first\");\r\n        return;\r\n    }\r\n\r\n    const files = Array.from(fileInput.files);\r\n    const savedFileName = nameInput?.value.trim() || \"converted-to-pdf\";\r\n\r\n    const pdfDoc = await PDFDocument.create();\r\n\r\n    for (const file of files) {\r\n        const imgBytes = await file.arrayBuffer();\r\n        const fileType = file.name.split('.').pop()?.toLowerCase();\r\n\r\n        let pdfImage: PDFImage;\r\n\r\n        if (fileType === \"png\") {\r\n            pdfImage = await pdfDoc.embedPng(imgBytes);\r\n        } else if (fileType === \"jpg\" || fileType === \"jpeg\") {\r\n            pdfImage = await pdfDoc.embedJpg(imgBytes);\r\n        } else {\r\n            alert(\"The file type is unsupported, only PNG and JPG allowed.\");\r\n            return;\r\n        }\r\n\r\n        const imgDims = pdfImage.scale(1);\r\n        const page = pdfDoc.addPage([imgDims.width, imgDims.height]);\r\n    \r\n        page.drawImage(pdfImage,{\r\n            x: 0,\r\n            y: 0,\r\n            width: imgDims.width,\r\n            height: imgDims.height\r\n        });\r\n    }\r\n  \r\n    const pdfBytes = await pdfDoc.save();\r\n    const blob = new Blob([pdfBytes], { type: 'application/pdf' });\r\n\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = `${savedFileName}.pdf`;\r\n    link.click();\r\n}"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,eAAe;IAClB,MAAM,YAAY,SAAS,cAAc,CAAC;IAC1C,MAAM,YAAY,SAAS,cAAc,CAAC;IAE1C,IAAI,CAAC,aAAa,CAAC,UAAU,KAAK,EAAE;QAChC,MAAM;QACN;IACJ;IAEA,MAAM,QAAQ,MAAM,IAAI,CAAC,UAAU,KAAK;IACxC,MAAM,gBAAgB,CAAA,sBAAA,gCAAA,UAAW,KAAK,CAAC,IAAI,OAAM;IAEjD,MAAM,SAAS,MAAM,mMAAA,CAAA,cAAW,CAAC,MAAM;IAEvC,KAAK,MAAM,QAAQ,MAAO;YAEL;QADjB,MAAM,WAAW,MAAM,KAAK,WAAW;QACvC,MAAM,YAAW,uBAAA,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,gBAAxB,2CAAA,qBAA4B,WAAW;QAExD,IAAI;QAEJ,IAAI,aAAa,OAAO;YACpB,WAAW,MAAM,OAAO,QAAQ,CAAC;QACrC,OAAO,IAAI,aAAa,SAAS,aAAa,QAAQ;YAClD,WAAW,MAAM,OAAO,QAAQ,CAAC;QACrC,OAAO;YACH,MAAM;YACN;QACJ;QAEA,MAAM,UAAU,SAAS,KAAK,CAAC;QAC/B,MAAM,OAAO,OAAO,OAAO,CAAC;YAAC,QAAQ,KAAK;YAAE,QAAQ,MAAM;SAAC;QAE3D,KAAK,SAAS,CAAC,UAAS;YACpB,GAAG;YACH,GAAG;YACH,OAAO,QAAQ,KAAK;YACpB,QAAQ,QAAQ,MAAM;QAC1B;IACJ;IAEA,MAAM,WAAW,MAAM,OAAO,IAAI;IAClC,MAAM,OAAO,IAAI,KAAK;QAAC;KAAS,EAAE;QAAE,MAAM;IAAkB;IAE5D,MAAM,OAAO,SAAS,aAAa,CAAC;IACpC,KAAK,IAAI,GAAG,IAAI,eAAe,CAAC;IAChC,KAAK,QAAQ,GAAG,AAAC,GAAgB,OAAd,eAAc;IACjC,KAAK,KAAK;AACd","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///D:/Project/converter-website/src/app/image-to-pdf/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport Navbar from \"@/components/Navbar\"\r\nimport { convertToPdf  } from \"@/components/image-to-pdf\";\r\n\r\nexport default function PngToPdf() {\r\n    return (\r\n        <div \r\n            className=\"min-h-screen bg-gray-50\"\r\n            style={{\r\n                backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 40 40' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23f3f4f6' fill-opacity='0.4'%3E%3Cpath d='M0 0h40v40H0V0z'/%3E%3C/g%3E%3Cg fill='%23e5e7eb' fill-opacity='0.3'%3E%3Cpath d='M0 20h40v1H0v-1zm20-20v40h1V0h-1z'/%3E%3C/g%3E%3C/svg%3E\")`,\r\n                backgroundSize: '40px 40px'}}>\r\n            <Navbar />\r\n\r\n            <div className=\"flex justify-center items-center min-h-screen flex-col gap-6 p-4 \">\r\n                <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\r\n                    Image to PDF Converter\r\n                </h1>\r\n                <div className=\"w-full max-w-md\">\r\n                    <label htmlFor=\"file_input\" className=\"block text-sm font-small text-gray-600 mb-3\">\r\n                        Choose PNG/JPG/JPEG file\r\n                    </label>\r\n                    <input \r\n                        id=\"file_input\" \r\n                        type=\"file\" \r\n                        multiple\r\n                        accept=\"image/png/jpg\" \r\n                        className=\"block w-full text-sm text-gray-800 border border-gray-800 rounded-lg cursor-pointer bg-gray-50 focus:outline-none focus:ring-1 focus:ring-slate-500 focus:border-blue-500 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-slate-400 file:text-black hover:file:bg-slate-600 transition-colors\"\r\n                    />\r\n                    <input id=\"file_name\" type=\"text\" placeholder=\"Save pdf with the name...\" className=\"my-2 border-solid border-1 px-4 py-1 rounded-lg border-gray-600 text-sm text-gray-800 \"></input>\r\n                </div>\r\n                <button \r\n                    onClick={convertToPdf} \r\n                    className=\"bg-red-100 hover:bg-red-200 border  text-black font-medium py-3 px-6 rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900 shadow-lg\"\r\n                >\r\n                    Convert to PDF\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACpB,qBACI,6LAAC;QACG,WAAU;QACV,OAAO;YACH,iBAAkB;YAClB,gBAAgB;QAAW;;0BAC/B,6LAAC,+HAAA,CAAA,UAAM;;;;;0BAEP,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAG,WAAU;kCAAwC;;;;;;kCAGtD,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAM,SAAQ;gCAAa,WAAU;0CAA8C;;;;;;0CAGpF,6LAAC;gCACG,IAAG;gCACH,MAAK;gCACL,QAAQ;gCACR,QAAO;gCACP,WAAU;;;;;;0CAEd,6LAAC;gCAAM,IAAG;gCAAY,MAAK;gCAAO,aAAY;gCAA4B,WAAU;;;;;;;;;;;;kCAExF,6LAAC;wBACG,SAAS,0IAAA,CAAA,eAAY;wBACrB,WAAU;kCACb;;;;;;;;;;;;;;;;;;AAMjB;KAnCwB","debugId":null}}]
}